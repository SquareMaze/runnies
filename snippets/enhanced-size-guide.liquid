{%- comment -%}
  Enhanced Size Guide for RUNNIES Sunglasses
  Provides comprehensive sizing information with interactive elements
  
  Parameters:
  - product {Object} - Product object
  - section {Object} - Section object for unique IDs
  
  Usage:
  {% render 'enhanced-size-guide', product: product, section: section %}
{%- endcomment -%}

{%- liquid
  assign size_guide_id = 'enhanced-size-guide-' | append: product.id | append: '-' | append: section.id
  assign has_size_guide = false
  
  # Check for metafield size guide
  if product.metafields.custom.sizing_chart != blank
    assign has_size_guide = true
    assign sizing_chart_value = product.metafields.custom.sizing_chart.value
  endif
  
  # Check for page-based size guide
  assign size_guide_page = null
  for block in section.blocks
    if block.type == 'variant-picker' and block.settings.enable_size_chart and block.settings.size_chart_page != blank
      assign size_guide_page = pages[block.settings.size_chart_page]
      assign has_size_guide = true
      break
    endif
  endfor
-%}

{%- if has_size_guide -%}
<div class="enhanced-size-guide">
  <button type="button" class="size-guide-trigger" data-modal-id="{{ size_guide_id }}" aria-haspopup="dialog">
    <div class="trigger-content">
      <div class="trigger-icon">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M3 21h18M3 7V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v2M5 21V3M9 21v-4M13 21v-4M17 21v-4M19 21V3"/>
        </svg>
      </div>
      <div class="trigger-text">
        <span class="trigger-label">Size Guide</span>
        <span class="trigger-subtitle">Find your perfect fit</span>
      </div>
      <div class="trigger-arrow">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M9 18l6-6-6-6"/>
        </svg>
      </div>
    </div>
  </button>

  <!-- Enhanced Size Guide Modal -->
  <div id="{{ size_guide_id }}" class="enhanced-size-modal" role="dialog" aria-modal="true" aria-labelledby="{{ size_guide_id }}-title">
    <div class="modal-backdrop"></div>
    <div class="modal-container">
      <div class="modal-header">
        <h2 id="{{ size_guide_id }}-title" class="modal-title">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M3 21h18M3 7V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v2M5 21V3M9 21v-4M13 21v-4M17 21v-4M19 21V3"/>
          </svg>
          Size Guide
        </h2>
        <button type="button" class="modal-close" aria-label="Close size guide">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <line x1="18" y1="6" x2="6" y2="18"/>
            <line x1="6" y1="6" x2="18" y2="18"/>
          </svg>
        </button>
      </div>
      
      <div class="modal-content">
        {%- if sizing_chart_value -%}
          <!-- Metafield-based size guide -->
          {%- if product.metafields.custom.sizing_chart.type == 'list.file_reference' -%}
            {%- for media_id in sizing_chart_value -%}
              {%- assign media = media_id | media_object -%}
              {%- if media -%}
                <div class="size-chart-image">
                  <img src="{{ media.preview_image | img_url: '1200x' }}" alt="Size Chart" loading="lazy">
                </div>
                {%- break -%}
              {%- endif -%}
            {%- endfor -%}
          {%- elsif product.metafields.custom.sizing_chart.type == 'file_reference' -%}
            {%- assign media = sizing_chart_value | media_object -%}
            {%- if media -%}
              <div class="size-chart-image">
                <img src="{{ media.preview_image | img_url: '1200x' }}" alt="Size Chart" loading="lazy">
              </div>
            {%- endif -%}
          {%- endif -%}
        {%- elsif size_guide_page -%}
          <!-- Page-based size guide -->
          <div class="size-chart-content">
            {{ size_guide_page.content }}
          </div>
        {%- endif -%}
        
        <!-- Additional sizing information -->
        <div class="sizing-tips">
          <h3 class="tips-title">Sizing Tips</h3>
          <div class="tips-grid">
            <div class="tip-item">
              <div class="tip-icon">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M12 2L2 7l10 5 10-5-10-5z"/>
                  <path d="M2 17l10 5 10-5"/>
                  <path d="M2 12l10 5 10-5"/>
                </svg>
              </div>
              <div class="tip-content">
                <h4>Measure Your Face</h4>
                <p>Use a ruler to measure the width of your face from temple to temple.</p>
              </div>
            </div>
            
            <div class="tip-item">
              <div class="tip-icon">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <circle cx="12" cy="12" r="3"/>
                  <path d="M12 1v6M12 17v6M4.22 4.22l4.24 4.24M15.54 15.54l4.24 4.24M1 12h6M17 12h6M4.22 19.78l4.24-4.24M15.54 8.46l4.24-4.24"/>
                </svg>
              </div>
              <div class="tip-content">
                <h4>Consider Your Style</h4>
                <p>Larger frames offer more coverage, while smaller frames provide a classic look.</p>
              </div>
            </div>
            
            <div class="tip-item">
              <div class="tip-icon">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M14 9V5a3 3 0 0 0-6 0v4"/>
                  <rect x="2" y="9" width="20" height="12" rx="2" ry="2"/>
                </svg>
              </div>
              <div class="tip-content">
                <h4>Comfort Matters</h4>
                <p>Ensure the temples fit comfortably behind your ears without pinching.</p>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Contact support -->
        <div class="size-guide-support">
          <p>Still unsure about your size? <a href="/pages/contact" class="support-link">Contact our team</a> for personalized assistance.</p>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
.enhanced-size-guide {
  margin: 1rem 0;
}

.size-guide-trigger {
  display: flex;
  align-items: center;
  width: 100%;
  padding: 0.75rem 1rem;
  background: linear-gradient(135deg, #ffeb01 0%, #f0d700 100%);
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: 0 2px 4px rgba(255, 235, 1, 0.2);
}

.size-guide-trigger:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(255, 235, 1, 0.3);
}

.trigger-content {
  display: flex;
  align-items: center;
  width: 100%;
  gap: 0.75rem;
}

.trigger-icon {
  flex-shrink: 0;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(35, 35, 35, 0.1);
  border-radius: 6px;
  color: #232323;
}

.trigger-text {
  flex: 1;
  text-align: left;
}

.trigger-label {
  display: block;
  font-weight: 600;
  font-size: 0.875rem;
  color: #232323;
  margin-bottom: 0.125rem;
}

.trigger-subtitle {
  display: block;
  font-size: 0.75rem;
  color: rgba(35, 35, 35, 0.7);
}

.trigger-arrow {
  flex-shrink: 0;
  color: #232323;
  transition: transform 0.2s ease;
}

.size-guide-trigger:hover .trigger-arrow {
  transform: translateX(2px);
}

/* Modal Styles */
.enhanced-size-modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 9999;
  display: none;
  align-items: center;
  justify-content: center;
  padding: 1rem;
}

.enhanced-size-modal.active {
  display: flex;
}

.modal-backdrop {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.6);
  backdrop-filter: blur(4px);
}

.modal-container {
  position: relative;
  background: white;
  border-radius: 12px;
  max-width: 800px;
  width: 100%;
  max-height: 90vh;
  overflow: hidden;
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
  animation: modalSlideIn 0.3s ease-out;
}

@keyframes modalSlideIn {
  from {
    opacity: 0;
    transform: translateY(20px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

.modal-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1.5rem;
  border-bottom: 1px solid #e9ecef;
  background: #f8f9fa;
}

.modal-title {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin: 0;
  font-size: 1.25rem;
  font-weight: 600;
  color: #232323;
}

.modal-close {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  background: none;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  color: #6c757d;
  transition: all 0.2s ease;
}

.modal-close:hover {
  background: #e9ecef;
  color: #232323;
}

.modal-content {
  padding: 1.5rem;
  max-height: calc(90vh - 120px);
  overflow-y: auto;
}

.size-chart-image {
  text-align: center;
  margin-bottom: 2rem;
}

.size-chart-image img {
  max-width: 100%;
  height: auto;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.size-chart-content {
  margin-bottom: 2rem;
}

.sizing-tips {
  margin: 2rem 0;
  padding: 1.5rem;
  background: #f8f9fa;
  border-radius: 8px;
  border: 1px solid #e9ecef;
}

.tips-title {
  margin: 0 0 1rem 0;
  font-size: 1.125rem;
  font-weight: 600;
  color: #232323;
}

.tips-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 1rem;
}

.tip-item {
  display: flex;
  gap: 0.75rem;
  padding: 1rem;
  background: white;
  border-radius: 6px;
  border: 1px solid #e9ecef;
}

.tip-icon {
  flex-shrink: 0;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: #ffeb01;
  border-radius: 6px;
  color: #232323;
}

.tip-content h4 {
  margin: 0 0 0.25rem 0;
  font-size: 0.875rem;
  font-weight: 600;
  color: #232323;
}

.tip-content p {
  margin: 0;
  font-size: 0.75rem;
  color: #6c757d;
  line-height: 1.4;
}

.size-guide-support {
  text-align: center;
  padding: 1rem;
  background: #e3f2fd;
  border-radius: 8px;
  border: 1px solid #bbdefb;
}

.size-guide-support p {
  margin: 0;
  font-size: 0.875rem;
  color: #1565c0;
}

.support-link {
  color: #0d47a1;
  text-decoration: underline;
  font-weight: 500;
}

.support-link:hover {
  color: #ffeb01;
}

/* Mobile Responsive */
@media (max-width: 768px) {
  .modal-container {
    margin: 0.5rem;
    max-height: 95vh;
  }
  
  .modal-header {
    padding: 1rem;
  }
  
  .modal-content {
    padding: 1rem;
  }
  
  .tips-grid {
    grid-template-columns: 1fr;
  }
  
  .tip-item {
    padding: 0.75rem;
  }
}

/* Accessibility */
@media (prefers-reduced-motion: reduce) {
  .size-guide-trigger,
  .trigger-arrow,
  .modal-close {
    transition: none;
  }
  
  .modal-container {
    animation: none;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const triggers = document.querySelectorAll('.size-guide-trigger');
  
  triggers.forEach(trigger => {
    trigger.addEventListener('click', function() {
      const modalId = this.getAttribute('data-modal-id');
      const modal = document.getElementById(modalId);
      
      if (modal) {
        // Show modal
        modal.classList.add('active');
        document.body.style.overflow = 'hidden';
        
        // Focus management
        const closeBtn = modal.querySelector('.modal-close');
        if (closeBtn) {
          closeBtn.focus();
        }
        
        // Close button functionality
        closeBtn.addEventListener('click', function() {
          closeModal(modal);
        });
        
        // Backdrop click to close
        const backdrop = modal.querySelector('.modal-backdrop');
        backdrop.addEventListener('click', function() {
          closeModal(modal);
        });
        
        // Escape key to close
        const handleEscape = function(e) {
          if (e.key === 'Escape') {
            closeModal(modal);
            document.removeEventListener('keydown', handleEscape);
          }
        };
        document.addEventListener('keydown', handleEscape);
      }
    });
  });
  
  function closeModal(modal) {
    modal.classList.remove('active');
    document.body.style.overflow = '';
  }
});
</script>
{%- endif -%}
